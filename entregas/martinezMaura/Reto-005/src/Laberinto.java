import java.util.*;

public class Laberinto {

    static final int FILA = 0;
    static final int COLUMNA = 1;

    static final int ARRIBA = 0;
    static final int ABAJO = 1;
    static final int IZQUIERDA = 2;
    static final int DERECHA = 3;
    static final int SALIR = 4;
    static final int CAMBIAR_VISUALIZACION = 5;
    static final int NADA = 999;
    static final int MODO_AUTOMATICO = 6;
    static final int ESTABLECER_OBJETIVO = 7;
    static final int REGRESAR = 8;
    static final int VISUALIZACION_NORMAL = 0;
    static final int VISUALIZACION_SIN_COLOR = 1;
    static final int VISUALIZACION_RAW = 2;
    static final int VISUALIZACION_COLISIONES = 3;

    static final int[][] MOVIMIENTOS = {
        { -1, 0 },
        { 1, 0 },
        { 0, -1 },
        { 0, 1 }
    };

    static double hora = 9.0;
    static int alcanceVision;
    static int viewPort;
    static int modoVisualizacion = VISUALIZACION_NORMAL;

    static int minFila, minColumna, maxFila, maxColumna;

    static boolean jugando = true;
    static boolean modoAutomatico = false;
    static final int LIBRE = 0;
    static final int PARED = 1;
    static final int CAMINO = 2;
    static final int VISITADO = 3;

    static String[] celdas = { " Â· ", "[ ]", " * ", " x " };
    static int[][] laberinto;
    static int[] posicionInicial = { 14, 15 };
    static int[] objetivoFinal = { 40, 42 };
    static List<int[]> movimientosRegistrados = new ArrayList<>();

    public static void main(String[] args) {
        String[] dosCastillos = {
        "............................................................................................................................................................",
                "............................................................................................................................................................",
                "..............................................................................                                                                              ",
                "..............................................................................                                                                              ",
                "..............................................................................                                                                              ",
                "..............................................................................                                                                              ",
                "..............................................................................                                                                              ",
                "..............................................................................                                                                              ",
                "..............................................................................                                                                              ",
                "..............                                                   .............                                                                              ",
                "............                                                       ...........                                                 %%%%%%%%%%%%%%%%%%%%%%       ",
                "...........                                                         ..........                                                 %%%%%%%%%%%%%%%%%%%%%%       ",
                "..........      ..................................                   .........                                                 %%%%%%%%%%%%%%%%%%%%%%       ",
                "..........    .....................................          ....    .........                                                 %%%%%%%%%%%%%%%%%%%%%%       ",
                ".........    .......................................        ......    ........                              |----------------|%%%%%%%%%%%%%%%%%%%%%%%       ",
                ".........    ..|-----|..........|-------------|.....    .|-----|..    ........                              |   ###%%%%###   |%%%%%%%%%%%%%%%%%%%%%%%       ",
                ".........   ...|::+::|..........O+++++++++++++|....    ..|::+::|...   ........                              |   ##      ##   |%%%%%%%%%%%%%%%%%%%%%%%       ",
                ".........   ...|:+++:|..........|+++++++++++++|...    ...|:+++:|...   ........                    |------|  |   #  ****  #   |%%%%%%%%%%%%%%%%%%%%%%%       ",
                ".........   ...|+++++------------++|-------|++------------+++++|...   ........                    |******|  |     #****#     |%%%%%%%%%%%%%%%%%%%%%%%       ",
                ".........   ...|:++++++++++++++++++|#######|++++++++++++++++++:|...   ........       |--------|----******---|     #****#     |---------###%%%%%%%%%%%       ",
                ".........   ...|::+++++++++++++++++|::###::|+++++++++++++++++::|...   ........       |===*****|******||*****|     #****#     |%%%*****O**#%%%%%%%%%%%       ",
                ".........   ...---|++|-------|-+++-|:*#*#*:|-----|---|---|++|---...   ........       |+===****|XX****||*****|    ###**###    |%%******|**#%%%%%%%%%%%       ",
                ".........   ......|++|---O---|+++++|*******|#####|+++-$$$|++|......   ........       |++|------XX|-----O-|**|    #%%**%%#    |%**|-----###%%%%%%%%%%%       ",
                ".........   ......|++|*#***#*|+++++|*******|#####-+++O*$$|++|......   ........       |++|******XX|*******|**|    #%%**%%#    |%****|%%%%%%%%%%%%%%%%%       ",
                ".........    .....|++|*#***#*|+++++|*******|+++++X+++|**$|++|......   ........       |++|********|*******|**|    #%%**%%#    |*****|%%%%%%%%%%%%%%%%%       ",
                ".........    .....|++|*#####*|+++++O*******|+++++X+++|---|++|......   ........       |++|-**------**-|---|**|    ###**###    |*****|%%%%%%%%%%%%%%%%%       ",
                ".........     ....|++|*******|--+--|--***--|+++++X+++-**$|++|......   ........       |++|#**#%%%%#**#|%%%|**-------****-------**|**|%%%%%%%%%%%%%%%%%       ",
                ".........      ...|++|--***--|+++++|::+++::|+++++|+++O*$$|++|......   ........       |++|%**%%%%%%***|%%%|**********************|**|%%%%%%%%%%%%%%%%%       ",
                ".........       ..|++|+++++++|+++++|:+++++:|+++++|+++|$$$|++|......   ........       |++|%**%|-|%%***|%%%|**********************|XX|%%%%%%%%%%%%%%%%%       ",
                "..........      ..|++|+##+##+|------+++++++--+++|---|----|++|......   ........       |++|**%%|-|%%#**|%%=|-------------|--|-----|XX---|%%%%%%%%%%%%%%       ",
                "...........      .|++|+++++++|++++++++++++++++++|***|**#*|++|......   ........       |++|***%---%%***|%==|    *****    |**|=%%%%|XX***|%%%%%%%%%%%%%%       ",
                "...........       |++|+##+##+|++++++++++++++++++|---|**##|++|......   ........       |++|*#*%***%***%|===|             |**|==%%%|*****-----------|--|       ",
                "............      |++|+++++++|++++++++++++++++++|********|++|......   ........       |++|%*********#%|===|     ***     |**|===|---||***%#%#%#%-**|%%|       ",
                "............      |++|+##+##+--++|----+++----|++|***|****|++|......   ........       |++|%%*|***|*%%%|+==|    *+++*    |**|===||++||**********O**O*%|       ",
                "...........      .|++|+++++++++++|:::+++++:::|++-------**|++|......   ........       |++|%%%|***|%%%%|++=|    **+***   --O|=+=||++|-***%#%#%#%-**|%%|       ",
                "...........     ..|++|++++++++++:|::+++++++::|+++++++++++|++|......   ........       |++-----***------+++|    |#+#|*    **|+++||++|***|----------|%%|       ",
                "..........      ..|++|-------|+::|:+++++++++:|+++++++++++|++|......   ........       |++++++++++++++XX+++|    |+++|*******|+++--++|***-******%%%%|%%|       ",
                "..........     ...|++|*******|----++++   ++++-------|----|++|......   ........       |++++++++++++++XX+++------#+#---------+++XX++|***********%%%|%%|       ",
                ".........      ...|++|**|---*|+++++++     ++++++++++|++++|++|......   ........       --------|-------|+++++++#=+++=#++++++++++XX++|***********%%%|%%|       ",
                ".........     ....|++|**|*#**|+++++++     ++++++++++O++++|++|......   ........               |%%%%%%||++++++++++++++++++++++++|--------**%%***%%%|%%|       ",
                ".........     ....|++|**|*#**|+++++++     ++++++++++|++++|++|......   ........          |-----%%%%%%||++++++++++++++++++++++++|++++++++%%%%%***%%|%%|       ",
                ".........    .....|++|**--|**|++++++++   ++++|-------++++|++|......   ........          |*%%%%%%||%%|------------------***----|+++++++%%%%%%***%*|%%|       ",
                ".........    .....|++|****|**|++++++++++++++:|+++++++++++|++|......   ........          |**%%*%%||%%|                ##***#   |++--|-|%%%%%%%*****%%|       ",
                ".........   ......|++|--**----+++++++++++++::|+-+++++++++|++|......   ........          |%*|-O------|               #*****#   |++++|||%%%%%%***%***%|       ",
                ".........   ......|++|++++++++++++++++++++:::|+++++++++++|++|......   ........          |**|%*%%%%%%|               #****#    |++++|||+%%%%%**%%%|---       ",
                ".........   ......|++|-------------|--+++--|----|+++|----|++|......   ........          |**|%%%%%%%%|              #***##     |-|++|||++|---++|---          ",
                ".........   ......|++|XXXXXXXXXXXXX|::+++::|#***|+++|***#|++|......   ........          |*%------|%%|------|    |---***---|   |--++|--++|+++++|             ",
                ".........   ......|++|X+++++++++++X| :+++: |****|+++|****|++|......   ........          |%%%***%%|%%|******|    |**%******|   |++++|++++|+++++|             ",
                ".........   ......|++|X++XXXXXXXX+X|  +++  |--O--+++--O--|++|......   ........          |%%%%***%|%%-******|    |*%%%**%**|   |++++|++++|++|---             ",
                ".........   ......|++|X++|-----|X+X|  +++  |+++++++++++++|++|......   ........          ------|**|%%%%*||**-####-%%%|-|%%*-###-++|-|++---++|                ",
                ".........   ......|++|X++|%%%%%|X+X| :+++: |--O-|+++|-O--|++|......   ........                |*%|%%***||********%%%|-|%%%*****++|||+++++++|                ",
                ".........   ......|++|X++|*****|X+X|::+++::|****|+++|****|++|......   ........                |%%---|---|*******%%%%---%%******++|||+++++++|                ",
                ".........   ......|++|X++|#####|X+X| :+++: |#***|+++|***#|++|......   ........                |%%%**|----**|####|%%%%*%%%%|###|++----|++|---                ",
                ".........   ......|++|X++|*****|X+X|  +++  |-----+++-----|++|......   ........                |%%%%*|******|    |%%%***%%%|   |+++++||++|                   ",
                ".........   ......|++|X++----**|X+X|  +++  |X+++++++++++%|++|......   ........                ---|**|%*****|    |%%*****%%|   |+++++||++|                   ",
                ".........   ......|++|X++++++++|X+X|  +++  |XX+++++++++%%|++|......   ........                   |*%|%%|----    ---|***|---   ---|++--++|                   ",
                ".........   ......|++|XXXXXXXXX|X+X| :+++: |XXX+++++++%%%|++|......   ........                   |%%|%%|           |***|         |++++++|                   ",
                ".........   ...|---++-----------X+X|::+++::|XXXX+++++%%%%|XX---|...   ........                   |%%-%%|           |***|         |++++++|                   ",
                ".........   ...|::++++++++++++++++X| :+++: |XXXXX+++%%%%%|***$$|...   ........                   |%%%%%|          #|***|#        --------                   ",
                ".........   ...|:+++++++++++++++++X|  +++  |#############|****$|...   ........                   |%%%%%|          #|***|#                                   ",
                ".........   ...|+++++|-------------|  +++  |-------------|*****|...   ........                   -------            +++                                     ",
                ".........   ...|:+++:|.............| :+++: |.............|$***$|...   ........                                      +++                                     ",
                ".........   ...|::+::|.............|::+++::|.............|$$*$$|...   ........                                      +++                                     ",
                ".........    ..-------.............---+++---.............-------..    ........                                      +++                                     ",
                ".........    .....................................................    ........                                      +++                                     ",
                "..........    ...................................................    .........                                      +++                                     ",
                "..........      ......................+++......................      .........                                      +++                                     ",
                "...........                           +++                           ..........                                      +++                                     ",
                "............                          +++                          ...........                                      +++                                     ",
                "..............                        +++                        .............                                      +++                                     ",
                "......................................+++.....................................                                      +++                                     ",
                "..............................................................................                                      +++                                     ",
                "..............................................................................                                      +++                                     ",
                "..............................................................................                                      +++                                     ",
                "..............................................................................                                      +++                                     ",
                "..............................................................................                                      +++                                     ",
                "..............................................................................                                      +++                                     ",
                "............................................................................................................................................................"
        };

        String[] castilloLB = {
                "..............................................................................",
                "..............................................................................",
                "..............................................................................",
                "..............................................................................",
                "..............................................................................",
                "..............................................................................",
                "..............................................................................",
                "..............................................................................",
                "..............................................................................",
                "..............                                                   .............",
                "............                                                       ...........",
                "...........                                                         ..........",
                "..........      ..................................                   .........",
                "..........    .....................................          ....    .........",
                ".........    .......................................        ......    ........",
                ".........    ..|-----|..........|-------------|.....    .|-----|..    ........",
                ".........   ...|::+::|..........O+++++++++++++|....    ..|::+::|...   ........",
                ".........   ...|:+++:|..........|+++++++++++++|...    ...|:+++:|...   ........",
                ".........   ...|+++++------------++|-------|++------------+++++|...   ........",
                ".........   ...|:++++++++++++++++++|#######|++++++++++++++++++:|...   ........",
                ".........   ...|::+++++++++++++++++|::###::|+++++++++++++++++::|...   ........",
                ".........   ...---|++|-------|-+++-|:*#*#*:|-----|---|---|++|---...   ........",
                ".........   ......|++|---O---|+++++|*******|#####|+++-$$$|++|......   ........",
                ".........   ......|++|*#***#*|+++++|*******|#####-+++O*$$|++|......   ........",
                ".........    .....|++|*#***#*|+++++|*******|+++++X+++|**$|++|......   ........",
                ".........    .....|++|*#####*|+++++O*******|+++++X+++|---|++|......   ........",
                ".........     ....|++|*******|--+--|--***--|+++++X+++-**$|++|......   ........",
                ".........      ...|++|--***--|+++++|::+++::|+++++|+++O*$$|++|......   ........",
                ".........       ..|++|+++++++|+++++|:+++++:|+++++|+++|$$$|++|......   ........",
                "..........      ..|++|+##+##+|------+++++++--+++|---|----|++|......   ........",
                "...........      .|++|+++++++|++++++++++++++++++|***|**#*|++|......   ........",
                "...........       |++|+##+##+|++++++++++++++++++|---|**##|++|......   ........",
                "............      |++|+++++++|++++++++++++++++++|********|++|......   ........",
                "............      |++|+##+##+--++|----+++----|++|***|****|++|......   ........",
                "...........      .|++|+++++++++++|:::+++++:::|++-------**|++|......   ........",
                "...........     ..|++|++++++++++:|::+++++++::|+++++++++++|++|......   ........",
                "..........      ..|++|-------|+::|:+++++++++:|+++++++++++|++|......   ........",
                "..........     ...|++|*******|----++++   ++++-------|----|++|......   ........",
                ".........      ...|++|**|---*|+++++++     ++++++++++|++++|++|......   ........",
                ".........     ....|++|**|*#**|+++++++     ++++++++++O++++|++|......   ........",
                ".........     ....|++|**|*#**|+++++++     ++++++++++|++++|++|......   ........",
                ".........    .....|++|**--|**|++++++++   ++++|-------++++|++|......   ........",
                ".........    .....|++|****|**|++++++++++++++:|+++++++++++|++|......   ........",
                ".........   ......|++|--**----+++++++++++++::|+-+++++++++|++|......   ........",
                ".........   ......|++|++++++++++++++++++++:::|+++++++++++|++|......   ........",
                ".........   ......|++|-------------|--+++--|----|+++|----|++|......   ........",
                ".........   ......|++|XXXXXXXXXXXXX|::+++::|#***|+++|***#|++|......   ........",
                ".........   ......|++|X+++++++++++X| :+++: |****|+++|****|++|......   ........",
                ".........   ......|++|X++XXXXXXXX+X|  +++  |--O--+++--O--|++|......   ........",
                ".........   ......|++|X++|-----|X+X|  +++  |+++++++++++++|++|......   ........",
                ".........   ......|++|X++|%%%%%|X+X| :+++: |--O-|+++|-O--|++|......   ........",
                ".........   ......|++|X++|*****|X+X|::+++::|****|+++|****|++|......   ........",
                ".........   ......|++|X++|#####|X+X| :+++: |#***|+++|***#|++|......   ........",
                ".........   ......|++|X++|*****|X+X|  +++  |-----+++-----|++|......   ........",
                ".........   ......|++|X++----**|X+X|  +++  |X+++++++++++%|++|......   ........",
                ".........   ......|++|X++++++++|X+X|  +++  |XX+++++++++%%|++|......   ........",
                ".........   ......|++|XXXXXXXXX|X+X| :+++: |XXX+++++++%%%|++|......   ........",
                ".........   ...|---++-----------X+X|::+++::|XXXX+++++%%%%|XX---|...   ........",
                ".........   ...|::++++++++++++++++X| :+++: |XXXXX+++%%%%%|***$$|...   ........",
                ".........   ...|:+++++++++++++++++X|  +++  |#############|****$|...   ........",
                ".........   ...|+++++|-------------|  +++  |-------------|*****|...   ........",
                ".........   ...|:+++:|.............| :+++: |.............|$***$|...   ........",
                ".........   ...|::+::|.............|::+++::|.............|$$*$$|...   ........",
                ".........    ..-------.............---+++---.............-------..    ........",
                ".........    .....................................................    ........",
                "..........    ...................................................    .........",
                "..........      ......................+++......................      .........",
                "...........                           +++                           ..........",
                "............                          +++                          ...........",
                "..............                        +++                        .............",
                "......................................+++.....................................",
                "..............................................................................",
                "..............................................................................",
                "..............................................................................",
                "..............................................................................",
                "..............................................................................",
                "..............................................................................",
                ".............................................................................."
        };
        String[] castilloEX = {
                "                                                                              ",
                "                                                                              ",
                "                                                                              ",
                "                                                                              ",
                "                                                                              ",
                "                                                                              ",
                "                                                                              ",
                "                                                                              ",
                "                                                 %%%%%%%%%%%%%%%%%%%%%%       ",
                "                                                 %%%%%%%%%%%%%%%%%%%%%%       ",
                "                                                 %%%%%%%%%%%%%%%%%%%%%%       ",
                "                                                 %%%%%%%%%%%%%%%%%%%%%%       ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                                      +++                                     ",
                "                              |   ##      ##   |%%%%%%%%%%%%%%%%%%%%%%%       ",
                "                              |   ###%%%%###   |%%%%%%%%%%%%%%%%%%%%%%%       ",
                "                              |----------------|%%%%%%%%%%%%%%%%%%%%%%%       ",
                "                    |******|  |     #****#     |%%%%%%%%%%%%%%%%%%%%%%%       ",
                "                    |------|  |   #  ****  #   |%%%%%%%%%%%%%%%%%%%%%%%       ",
                "                   -------            +++                                     ",
                "                   |%%%%%|          #|***|#                                   ",
                "                   |%%%%%|          #|***|#        --------                   ",
                "                   |%%-%%|           |***|         |++++++|                   ",
                "                   |%%|%%|           |***|         |++++++|                   ",
                "                   |*%|%%|----    ---|***|---   ---|++--++|                   ",
                "                ---|**|%*****|    |%%*****%%|   |+++++||++|                   ",
                "                |%%%%*|******|    |%%%***%%%|   |+++++||++|                   ",
                "                |%%%**|----**|####|%%%%*%%%%|###|++----|++|---                ",
                "                |%%---|---|*******%%%%---%%******++|||+++++++|                ",
                "                |*%|%%***||********%%%|-|%%%*****++|||+++++++|                ",
                "               |%%%%%%||++++++++++++++++++++++++|--------**%%***%%%|%%|       ",
                "          ------|**|%%%%*||**-####-%%%|-|%%*-###-++|-|++---++|                ",
                "          |%%%%***%|%%-******|    |*%%%**%**|   |++++|++++|++|---             ",
                "          |%%%***%%|%%|******|    |**%******|   |++++|++++|+++++|             ",
                "          |%*|-O------|               #*****#   |++++|||%%%%%%***%***%|       ",
                "          |*%%%%%%||%%|------------------***----|+++++++%%%%%%***%*|%%|       ",
                "          |*%------|%%|------|    |---***---|   |--++|--++|+++++|             ",
                "          |**%%*%%||%%|                ##***#   |++--|-|%%%%%%%*****%%|       ",
                "          |**|%%%%%%%%|              #***##     |-|++|||++|---++|---          ",
                "          |**|%*%%%%%%|               #****#    |++++|||+%%%%%**%%%|---       ",
                "          |-----%%%%%%||++++++++++++++++++++++++|++++++++%%%%%***%%|%%|       ",
                "       --------|-------|+++++++#=+++=#++++++++++XX++|***********%%%|%%|       ",
                "       |++++++++++++++XX+++------#+#---------+++XX++|***********%%%|%%|       ",
                "       |++++++++++++++XX+++|    |+++|*******|+++--++|***-******%%%%|%%|       ",
                "       |++-----***------+++|    |#+#|*    **|+++||++|***|----------|%%|       ",
                "       |++|#**#%%%%#**#|%%%|**-------****-------**|**|%%%%%%%%%%%%%%%%%       ",
                "       |++|%%%|***|%%%%|++=|    **+***   --O|=+=||++|-***%#%#%#%-**|%%|       ",
                "       |++|%%*|***|*%%%|+==|    *+++*    |**|===||++||**********O**O*%|       ",
                "       |++|%**%%%%%%***|%%%|**********************|**|%%%%%%%%%%%%%%%%%       ",
                "       |++|%**%|-|%%***|%%%|**********************|XX|%%%%%%%%%%%%%%%%%       ",
                "       |++|%*********#%|===|     ***     |**|===|---||***%#%#%#%-**|%%|       ",
                "       |++|*#*%***%***%|===|             |**|==%%%|*****-----------|--|       ",
                "       |++|**%%|-|%%#**|%%=|-------------|--|-----|XX---|%%%%%%%%%%%%%%       ",
                "       |++|***%---%%***|%==|    *****    |**|=%%%%|XX***|%%%%%%%%%%%%%%       ",
                "       |++|********|*******|**|    #%%**%%#    |*****|%%%%%%%%%%%%%%%%%       ",
                "       |++|******XX|*******|**|    #%%**%%#    |%****|%%%%%%%%%%%%%%%%%       ",
                "       |++|-**------**-|---|**|    ###**###    |*****|%%%%%%%%%%%%%%%%%       ",
                "       |++|------XX|-----O-|**|    #%%**%%#    |%**|-----###%%%%%%%%%%%       ",
                "       |+===****|XX****||*****|    ###**###    |%%******|**#%%%%%%%%%%%       ",
                "       |--------|----******---|     #****#     |---------###%%%%%%%%%%%       ",
                "       |===*****|******||*****|     #****#     |%%%*****O**#%%%%%%%%%%%       "
        };

        inicializarMundo(dosCastillos);

        do {
            actualizarTiempo();
            imprimirMundo(dosCastillos, posicionInicial);
            manejarAccion(posicionInicial, dosCastillos);
        } while (jugando && !modoAutomatico);

        if (modoAutomatico) {
            System.out.println("Iniciando Modo AutomÃ¡tico");
            laberinto = inicializarLaberinto(dosCastillos);
            if (encontrarCaminoAutomatico(laberinto, posicionInicial, objetivoFinal, dosCastillos)) {
                imprimirMundo(dosCastillos, posicionInicial);
            } else {
                System.out.println("No se encontrÃ³ una ruta.");
            }
        }
    }

    private static void inicializarMundo(String[] mundo) {
        viewPort = 7;
        alcanceVision = viewPort / 2;

        minFila = 0 + viewPort;
        minColumna = 0 + viewPort;
        maxFila = mundo.length - (viewPort + 1);
        maxColumna = mundo[0].length() - (viewPort + 1);
    }

    static void actualizarTiempo() {
        hora = hora + 0.2;
        if (hora >= 24) {
            hora = 0;
        }
        calcularAlcanceVision();
    }

    static void calcularAlcanceVision() {
        alcanceVision = viewPort * 2;

        if (hora < 1 || hora > 23) {
            alcanceVision = 1;
        } else if (hora < 3 || hora > 21) {
            alcanceVision = alcanceVision / 5;
        } else if (hora < 4 || hora > 20) {
            alcanceVision = alcanceVision / 5 * 2;
        } else if (hora < 5 || hora > 19) {
            alcanceVision = alcanceVision / 5 * 3;
        } else if (hora < 6 || hora > 18) {
            alcanceVision = alcanceVision / 5 * 4;
        }
    }

    static void imprimirMundo(String[] castillo, int[] personaje) {
        String elemento;
        limpiarPantalla();
        imprimirElCielo();
        for (int fila = personaje[FILA] - viewPort; fila <= personaje[FILA] + viewPort; fila++) {
            for (int columna = personaje[COLUMNA] - viewPort; columna <= personaje[COLUMNA] + viewPort; columna++) {
                elemento = mapearElemento('P', modoVisualizacion);
                if (!(fila == personaje[FILA] && columna == personaje[COLUMNA])) {
                    elemento = mapearElemento(castillo[fila].charAt(columna), modoVisualizacion);
                }

                if (!(Math.pow((fila - personaje[FILA]), 2)
                        + Math.pow((columna - personaje[COLUMNA]), 2) <= alcanceVision * alcanceVision)) {
                    elemento = mapearElemento('D', modoVisualizacion);
                }
                System.out.print(elemento);
            }
            System.out.println();
        }
        imprimirEstado(personaje);
    }

    private static void imprimirEstado(int[] personaje) {
        imprimirLinea();
        System.out.print("HORA: [" + (int) hora + "] ");
        System.out.print("/ (" + personaje[FILA] + "," + personaje[COLUMNA] + ")");
        System.out.println(" / SKIN[" + modoVisualizacion + "]");
        imprimirLinea();
    }

    static void imprimirLinea() {
        System.out.println(mapearElemento('B', modoVisualizacion).repeat(viewPort * 2 + 1));
    }

    static String mapearElemento(char elemento, int modoVisualizacion) {
        switch (modoVisualizacion) {
            case VISUALIZACION_NORMAL:
                return mapearNormal(elemento);
            case VISUALIZACION_SIN_COLOR:
                return mapearSinColor(elemento);
            case VISUALIZACION_RAW:
                return mapearRaw(elemento);
            case VISUALIZACION_COLISIONES:
                return obtenerTipoTerreno(elemento);
        }
        return "";
    }

    private static String mapearRaw(char elemento) {
        HashMap<String, String> tiles = new HashMap<>();

        tiles.put(" ", " ");
        tiles.put(".", ".");
        tiles.put("-", "-");
        tiles.put("=", "=");
        tiles.put("|", "|");
        tiles.put(":", ":");
        tiles.put("+", "+");
        tiles.put("O", "O");
        tiles.put("#", "#");
        tiles.put("*", "*");
        tiles.put("$", "$");
        tiles.put("X", "X");
        tiles.put("%", "%");
        tiles.put("_", "_");
        tiles.put("~", "~");
        tiles.put("B", "B");
        tiles.put("P", "P");
        tiles.put("D", "D");
        tiles.put("S", "S");
        tiles.put("C", "C");

        return tiles.get("" + elemento);
    }

    static String mapearSinColor(char elemento) {
        HashMap<String, String> tiles = new HashMap<>();

        tiles.put(" ", " ~~ ");
        tiles.put(".", " . .");
        tiles.put("-", "[##]");
        tiles.put("=", "||||");
        tiles.put("|", "[##]");
        tiles.put(":", "oO*o");
        tiles.put("+", "..:.");
        tiles.put("O", "[  ]");
        tiles.put("#", "::::");
        tiles.put("*", "    ");
        tiles.put("$", "$$$$");
        tiles.put("X", "||||");
        tiles.put("%", "%%%%");
        tiles.put("_", "____");
        tiles.put("~", " ~ ~");
        tiles.put("B", "====");
        tiles.put("P", "_()_");
        tiles.put("D", "    ");
        tiles.put("S", " () ");
        tiles.put("C", "    ");

        return tiles.get("" + elemento);
    }

    static String mapearNormal(char elemento) {
        HashMap<String, String> tiles = new HashMap<>();

        tiles.put(" ", BLUE_BOLD_BRIGHT + BLUE_BACKGROUND_BRIGHT + " ~~ " + RESET);
        tiles.put(".", YELLOW_BRIGHT + GREEN_BACKGROUND + " . ." + RESET);
        tiles.put("-", WHITE + WHITE_BACKGROUND + "[##]" + RESET);
        tiles.put("=", BLACK_BACKGROUND_BRIGHT + "||||" + RESET);
        tiles.put("|", WHITE + WHITE_BACKGROUND + "[##]" + RESET);
        tiles.put(":", YELLOW_BRIGHT + GREEN_BACKGROUND + "oO*o" + RESET);
        tiles.put("+", GREEN_BOLD + YELLOW_BACKGROUND + "..:." + RESET);
        tiles.put("O", WHITE_BACKGROUND_BRIGHT + "[  ]" + RESET);
        tiles.put("#", BLACK + RED_BACKGROUND + "::::" + RESET);
        tiles.put("*", YELLOW + YELLOW_BACKGROUND + "    " + RESET);
        tiles.put("$", RED_BRIGHT + YELLOW_BACKGROUND + "$$$$" + RESET);
        tiles.put("X", RED_UNDERLINED + YELLOW_BACKGROUND + "||||" + RESET);
        tiles.put("%", GREEN_BOLD + YELLOW_BACKGROUND + "%%%%" + RESET);
        tiles.put("_", BLACK + "____" + RESET);
        tiles.put("~", BLUE_BACKGROUND_BRIGHT + " ~ ~" + RESET);
        tiles.put("B", BLACK_BOLD + BLACK_BACKGROUND + "====" + RESET);
        tiles.put("P", GREEN_BOLD + BLACK_BACKGROUND + "_()_" + RESET);
        tiles.put("D", BLACK_BACKGROUND_BRIGHT + "    " + RESET);
        tiles.put("S", YELLOW_BOLD_BRIGHT + BLUE_BACKGROUND + " () " + RESET);
        tiles.put("C", RED_BACKGROUND_BRIGHT + "    " + RESET);

        return tiles.get("" + elemento);
    }

    private static void imprimirElCielo() {
        int skyLength = viewPort * 2 + 1;
        System.out.println((BLUE_BACKGROUND + "  " + RESET).repeat(skyLength));
    }

    static void manejarAccion(int[] personaje, String[] castillo) {
        switch (leerAccion()) {
            case ARRIBA:
                mover(personaje, MOVIMIENTOS[ARRIBA], castillo);
                break;
            case ABAJO:
                mover(personaje, MOVIMIENTOS[ABAJO], castillo);
                break;
            case IZQUIERDA:
                mover(personaje, MOVIMIENTOS[IZQUIERDA], castillo);
                break;
            case DERECHA:
                mover(personaje, MOVIMIENTOS[DERECHA], castillo);
                break;
            case SALIR:
                jugando = false;
                break;
            case CAMBIAR_VISUALIZACION:
                cambiarVisualizacion();
                break;
            case NADA:
                System.out.println("Comando no reconocido");
                break;
            case MODO_AUTOMATICO:
                modoAutomatico = true;
                break;
            case ESTABLECER_OBJETIVO:
                establecerObjetivo();
                break;
            case REGRESAR:
                regresar();
                break;
        }
    }

    private static void establecerObjetivo() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Ingrese fila: ");
        int fila = scanner.nextInt();
        System.out.print("Ingrese columna: ");
        int columna = scanner.nextInt();
        objetivoFinal = new int[] { fila, columna };
    }

    private static void regresar() {
        if (movimientosRegistrados.isEmpty()) {
            System.out.println("No hay movimientos registrados.");
            return;
        }
        int[] posicionAnterior = movimientosRegistrados.remove(movimientosRegistrados.size() - 1);
        posicionInicial[FILA] = posicionAnterior[FILA];
        posicionInicial[COLUMNA] = posicionAnterior[COLUMNA];
    }

    private static void cambiarVisualizacion() {
        modoVisualizacion++;
        if (modoVisualizacion > VISUALIZACION_COLISIONES) {
            modoVisualizacion = VISUALIZACION_NORMAL;
        }
    }

    private static int leerAccion() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ingrese una acciÃ³n: ");
        String input = scanner.nextLine().toLowerCase();

        switch (input) {
            case "w":
                return ARRIBA;
            case "s":
                return ABAJO;
            case "a":
                return IZQUIERDA;
            case "d":
                return DERECHA;
            case "x":
                return SALIR;
            case "m":
                return CAMBIAR_VISUALIZACION;
            case "n":
                return NADA;
            case "auto":
                return MODO_AUTOMATICO;
            case "o":
                return ESTABLECER_OBJETIVO;
            case "r":
                return REGRESAR;
        }
        return NADA;
    }

    static void mover(int[] personaje, int[] movimiento, String[] castillo) {
        int nuevaFila = personaje[FILA] + movimiento[FILA];
        int nuevaColumna = personaje[COLUMNA] + movimiento[COLUMNA];

        if (nuevaFila < minFila || nuevaFila > maxFila || nuevaColumna < minColumna || nuevaColumna > maxColumna) {
            return;
        }

        if (castillo[nuevaFila].charAt(nuevaColumna) == ' ') {
            return;
        }

        personaje[FILA] = nuevaFila;
        personaje[COLUMNA] = nuevaColumna;
        registrarMovimiento(personaje);
    }

    private static void registrarMovimiento(int[] personaje) {
        movimientosRegistrados.add(new int[] { personaje[FILA], personaje[COLUMNA] });
    }

    static int[][] inicializarLaberinto(String[] castillo) {
        int[][] laberinto = new int[castillo.length][castillo[0].length()];

        for (int fila = 0; fila < castillo.length; fila++) {
            for (int columna = 0; columna < castillo[fila].length(); columna++) {
                switch (castillo[fila].charAt(columna)) {
                    case '#':
                        laberinto[fila][columna] = PARED;
                        break;
                    case '.':
                        laberinto[fila][columna] = CAMINO;
                        break;
                    default:
                        laberinto[fila][columna] = LIBRE;
                        break;
                }
            }
        }

        return laberinto;
    }

    static boolean encontrarCaminoAutomatico(int[][] laberinto, int[] inicio, int[] fin, String[] castillo) {
        boolean[][] visitado = new boolean[laberinto.length][laberinto[0].length()];
        List<int[]> camino = new ArrayList<>();
        if (encontrarCaminoRecursivo(laberinto, inicio, fin, visitado, camino)) {
            for (int[] posicion : camino) {
                if (castillo[posicion[FILA]].charAt(posicion[COLUMNA]) != '#') {
                    castillo[posicion[FILA]] = reemplazarCaracter(castillo[posicion[FILA]], posicion[COLUMNA], '*');
                }
            }
            return true;
        }
        return false;
    }

    static boolean encontrarCaminoRecursivo(int[][] laberinto, int[] posicion, int[] fin, boolean[][] visitado, List<int[]> camino) {
        if (posicion[FILA] == fin[FILA] && posicion[COLUMNA] == fin[COLUMNA]) {
            camino.add(posicion.clone());
            return true;
        }

        if (posicion[FILA] < 0 || posicion[FILA] >= laberinto.length || posicion[COLUMNA] < 0 || posicion[COLUMNA] >= laberinto[0].length
                || laberinto[posicion[FILA]][posicion[COLUMNA]] == PARED || visitado[posicion[FILA]][posicion[COLUMNA]]) {
            return false;
        }

        visitado[posicion[FILA]][posicion[COLUMNA]] = true;
        camino.add(posicion.clone());

        for (int[] movimiento : MOVIMIENTOS) {
            posicion[FILA] += movimiento[FILA];
            posicion[COLUMNA] += movimiento[COLUMNA];

            if (encontrarCaminoRecursivo(laberinto, posicion, fin, visitado, camino)) {
                return true;
            }

            posicion[FILA] -= movimiento[FILA];
            posicion[COLUMNA] -= movimiento[COLUMNA];
        }

        camino.remove(camino.size() - 1);
        return false;
    }

    static String reemplazarCaracter(String cadena, int indice, char nuevoCaracter) {
        char[] chars = cadena.toCharArray();
        chars[indice] = nuevoCaracter;
        return String.valueOf(chars);
    }

    static String obtenerTipoTerreno(char terreno) {
        switch (terreno) {
            case ' ':
                return "Agua";
            case '.':
                return "Camino";
            case '-':
                return "Pared";
            case '=':
                return "Pared Fuerte";
            case '|':
                return "Pared";
            case ':':
                return "Pasto";
            case '+':
                return "Puerta";
            case 'O':
                return "Cofre";
            case '#':
                return "Piedra";
            case '*':
                return "VacÃ­o";
            case '$':
                return "Tesoro";
            case 'X':
                return "Trampa";
            case '%':
                return "Portal";
            case '_':
                return "Puente";
            case '~':
                return "Agua";
            case 'B':
                return "Barrera";
            case 'P':
                return "Personaje";
            case 'D':
                return "Oscuridad";
            case 'S':
                return "Objetivo";
            case 'C':
                return "Camino";
            default:
                return "Desconocido";
        }
    }
}

    public static final String RESET = "\u001B[0m";
    public static final String BLACK = "\u001B[30m";
    public static final String RED = "\u001B[31m";
    public static final String GREEN = "\u001B[32m";
    public static final String YELLOW = "\u001B[33m";
    public static final String BLUE = "\u001B[34m";
    public static final String PURPLE = "\u001B[35m";
    public static final String CYAN = "\u001B[36m";
    public static final String WHITE = "\u001B[37m";

    public static final String BLACK_BOLD = "\033[1;30m";
    public static final String RED_BOLD = "\033[1;31m";
    public static final String GREEN_BOLD = "\033[1;32m";
    public static final String YELLOW_BOLD = "\033[1;33m";
    public static final String BLUE_BOLD = "\033[1;34m";
    public static final String PURPLE_BOLD = "\033[1;35m";
    public static final String CYAN_BOLD = "\033[1;36m";
    public static final String WHITE_BOLD = "\033[1;37m";

    public static final String BLACK_BACKGROUND = "\033[40m";
    public static final String RED_BACKGROUND = "\033[41m";
    public static final String GREEN_BACKGROUND = "\033[42m";
    public static final String YELLOW_BACKGROUND = "\033[43m";
    public static final String BLUE_BACKGROUND = "\033[44m";
    public static final String PURPLE_BACKGROUND = "\033[45m";
    public static final String CYAN_BACKGROUND = "\033[46m";
    public static final String WHITE_BACKGROUND = "\033[47m";

    public static final String BLACK_BACKGROUND_BRIGHT = "\033[0;100m";
    public static final String RED_BACKGROUND_BRIGHT = "\033[0;101m";
    public static final String GREEN_BACKGROUND_BRIGHT = "\033[0;102m";
    public static final String YELLOW_BACKGROUND_BRIGHT = "\033[0;103m";
    public static final String BLUE_BACKGROUND_BRIGHT = "\033[0;104m";
    public static final String PURPLE_BACKGROUND_BRIGHT = "\033[0;105m";
    public static final String CYAN_BACKGROUND_BRIGHT = "\033[0;106m";
    public static final String WHITE_BACKGROUND_BRIGHT = "\033[0;107m";

    public static final String YELLOW_BOLD_BRIGHT = "\033[1;93m";
    public static final String BLUE_BOLD_BRIGHT = "\033[1;94m";
    public static final String RED_BRIGHT = "\033[0;91m";
    public static final String YELLOW_BRIGHT = "\033[0;93m";
    public static final String GREEN_BRIGHT = "\033[0;92m";
    public static final String RED_UNDERLINED = "\033[4;31m";
}
